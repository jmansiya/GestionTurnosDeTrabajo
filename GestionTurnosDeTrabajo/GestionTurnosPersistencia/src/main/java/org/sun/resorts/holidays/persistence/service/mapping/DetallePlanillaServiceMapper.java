/*
 * Created on 31 oct 2015 ( Time 10:51:33 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package org.sun.resorts.holidays.persistence.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.sun.resorts.holidays.model.DetallePlanilla;
import org.sun.resorts.holidays.model.jpa.DetallePlanillaEntity;
import org.sun.resorts.holidays.model.jpa.PlanillasEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class DetallePlanillaServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public DetallePlanillaServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'DetallePlanillaEntity' to 'DetallePlanilla'
	 * @param detallePlanillaEntity
	 */
	public DetallePlanilla mapDetallePlanillaEntityToDetallePlanilla(DetallePlanillaEntity detallePlanillaEntity) {
		if(detallePlanillaEntity == null) {
			return null;
		}

		//--- Generic mapping 
		DetallePlanilla detallePlanilla = map(detallePlanillaEntity, DetallePlanilla.class);

		//--- Link mapping ( link to Planillas )
		if(detallePlanillaEntity.getPlanillas() != null) {
			detallePlanilla.setPlanillasIdplanillas(detallePlanillaEntity.getPlanillas().getIdplanillas());
		}
		return detallePlanilla;
	}
	
	/**
	 * Mapping from 'DetallePlanilla' to 'DetallePlanillaEntity'
	 * @param detallePlanilla
	 * @param detallePlanillaEntity
	 */
	public void mapDetallePlanillaToDetallePlanillaEntity(DetallePlanilla detallePlanilla, DetallePlanillaEntity detallePlanillaEntity) {
		if(detallePlanilla == null) {
			return;
		}

		//--- Generic mapping 
		map(detallePlanilla, detallePlanillaEntity);

		//--- Link mapping ( link : detallePlanilla )
		if( hasLinkToPlanillas(detallePlanilla) ) {
			PlanillasEntity planillas1 = new PlanillasEntity();
			planillas1.setIdplanillas( detallePlanilla.getPlanillasIdplanillas() );
			detallePlanillaEntity.setPlanillas( planillas1 );
		} else {
			detallePlanillaEntity.setPlanillas( null );
		}

	}
	
	/**
	 * Verify that Planillas id is valid.
	 * @param Planillas Planillas
	 * @return boolean
	 */
	private boolean hasLinkToPlanillas(DetallePlanilla detallePlanilla) {
		if(detallePlanilla.getPlanillasIdplanillas() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}