/*
 * Created on 31 oct 2015 ( Time 10:51:33 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package org.sun.resorts.holidays.persistence.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.sun.resorts.holidays.model.DetallePlanillaHasEmpleados;
import org.sun.resorts.holidays.model.jpa.DetallePlanillaHasEmpleadosEntity;
import org.sun.resorts.holidays.model.jpa.DetallePlanillaHasEmpleadosEntityKey;
import org.sun.resorts.holidays.persistence.service.DetallePlanillaHasEmpleadosService;
import org.sun.resorts.holidays.persistence.service.mapping.DetallePlanillaHasEmpleadosServiceMapper;
import org.sun.resorts.holidays.data.repository.jpa.DetallePlanillaHasEmpleadosJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of DetallePlanillaHasEmpleadosService
 */
@Component
@Transactional
public class DetallePlanillaHasEmpleadosServiceImpl implements DetallePlanillaHasEmpleadosService {

	@Resource
	private DetallePlanillaHasEmpleadosJpaRepository detallePlanillaHasEmpleadosJpaRepository;

	@Resource
	private DetallePlanillaHasEmpleadosServiceMapper detallePlanillaHasEmpleadosServiceMapper;
	
	@Override
	public DetallePlanillaHasEmpleados findById(Integer detallePlanillaIdDetalle, Integer empleadosIdempleados) {
		DetallePlanillaHasEmpleadosEntityKey id = new DetallePlanillaHasEmpleadosEntityKey(detallePlanillaIdDetalle, empleadosIdempleados);
		DetallePlanillaHasEmpleadosEntity detallePlanillaHasEmpleadosEntity = detallePlanillaHasEmpleadosJpaRepository.findOne(id);
		return detallePlanillaHasEmpleadosServiceMapper.mapDetallePlanillaHasEmpleadosEntityToDetallePlanillaHasEmpleados(detallePlanillaHasEmpleadosEntity);
	}

	@Override
	public List<DetallePlanillaHasEmpleados> findAll() {
		Iterable<DetallePlanillaHasEmpleadosEntity> entities = detallePlanillaHasEmpleadosJpaRepository.findAll();
		List<DetallePlanillaHasEmpleados> beans = new ArrayList<DetallePlanillaHasEmpleados>();
		for(DetallePlanillaHasEmpleadosEntity detallePlanillaHasEmpleadosEntity : entities) {
			beans.add(detallePlanillaHasEmpleadosServiceMapper.mapDetallePlanillaHasEmpleadosEntityToDetallePlanillaHasEmpleados(detallePlanillaHasEmpleadosEntity));
		}
		return beans;
	}

	@Override
	public DetallePlanillaHasEmpleados save(DetallePlanillaHasEmpleados detallePlanillaHasEmpleados) {
		return update(detallePlanillaHasEmpleados) ;
	}

	@Override
	public DetallePlanillaHasEmpleados create(DetallePlanillaHasEmpleados detallePlanillaHasEmpleados) {
		DetallePlanillaHasEmpleadosEntityKey id = new DetallePlanillaHasEmpleadosEntityKey(detallePlanillaHasEmpleados.getDetallePlanillaIdDetalle(), detallePlanillaHasEmpleados.getEmpleadosIdempleados());
		DetallePlanillaHasEmpleadosEntity detallePlanillaHasEmpleadosEntity = detallePlanillaHasEmpleadosJpaRepository.findOne(id);
		if( detallePlanillaHasEmpleadosEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		detallePlanillaHasEmpleadosEntity = new DetallePlanillaHasEmpleadosEntity();
		detallePlanillaHasEmpleadosServiceMapper.mapDetallePlanillaHasEmpleadosToDetallePlanillaHasEmpleadosEntity(detallePlanillaHasEmpleados, detallePlanillaHasEmpleadosEntity);
		DetallePlanillaHasEmpleadosEntity detallePlanillaHasEmpleadosEntitySaved = detallePlanillaHasEmpleadosJpaRepository.save(detallePlanillaHasEmpleadosEntity);
		return detallePlanillaHasEmpleadosServiceMapper.mapDetallePlanillaHasEmpleadosEntityToDetallePlanillaHasEmpleados(detallePlanillaHasEmpleadosEntitySaved);
	}

	@Override
	public DetallePlanillaHasEmpleados update(DetallePlanillaHasEmpleados detallePlanillaHasEmpleados) {
		DetallePlanillaHasEmpleadosEntityKey id = new DetallePlanillaHasEmpleadosEntityKey(detallePlanillaHasEmpleados.getDetallePlanillaIdDetalle(), detallePlanillaHasEmpleados.getEmpleadosIdempleados());
		DetallePlanillaHasEmpleadosEntity detallePlanillaHasEmpleadosEntity = detallePlanillaHasEmpleadosJpaRepository.findOne(id);
		detallePlanillaHasEmpleadosServiceMapper.mapDetallePlanillaHasEmpleadosToDetallePlanillaHasEmpleadosEntity(detallePlanillaHasEmpleados, detallePlanillaHasEmpleadosEntity);
		DetallePlanillaHasEmpleadosEntity detallePlanillaHasEmpleadosEntitySaved = detallePlanillaHasEmpleadosJpaRepository.save(detallePlanillaHasEmpleadosEntity);
		return detallePlanillaHasEmpleadosServiceMapper.mapDetallePlanillaHasEmpleadosEntityToDetallePlanillaHasEmpleados(detallePlanillaHasEmpleadosEntitySaved);
	}

	@Override
	public void delete(Integer detallePlanillaIdDetalle, Integer empleadosIdempleados) {
		DetallePlanillaHasEmpleadosEntityKey id = new DetallePlanillaHasEmpleadosEntityKey(detallePlanillaIdDetalle, empleadosIdempleados);
		detallePlanillaHasEmpleadosJpaRepository.delete(id);
	}

	public DetallePlanillaHasEmpleadosJpaRepository getDetallePlanillaHasEmpleadosJpaRepository() {
		return detallePlanillaHasEmpleadosJpaRepository;
	}

	public void setDetallePlanillaHasEmpleadosJpaRepository(DetallePlanillaHasEmpleadosJpaRepository detallePlanillaHasEmpleadosJpaRepository) {
		this.detallePlanillaHasEmpleadosJpaRepository = detallePlanillaHasEmpleadosJpaRepository;
	}

	public DetallePlanillaHasEmpleadosServiceMapper getDetallePlanillaHasEmpleadosServiceMapper() {
		return detallePlanillaHasEmpleadosServiceMapper;
	}

	public void setDetallePlanillaHasEmpleadosServiceMapper(DetallePlanillaHasEmpleadosServiceMapper detallePlanillaHasEmpleadosServiceMapper) {
		this.detallePlanillaHasEmpleadosServiceMapper = detallePlanillaHasEmpleadosServiceMapper;
	}

}
