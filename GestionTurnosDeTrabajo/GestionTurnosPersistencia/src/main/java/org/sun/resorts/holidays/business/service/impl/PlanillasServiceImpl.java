/*
 * Created on 28 oct 2015 ( Time 21:40:10 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package org.sun.resorts.holidays.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.sun.resorts.holidays.model.Planillas;
import org.sun.resorts.holidays.model.jpa.PlanillasEntity;
import java.util.Date;
import java.util.List;
import org.sun.resorts.holidays.business.service.PlanillasService;
import org.sun.resorts.holidays.business.service.mapping.PlanillasServiceMapper;
import org.sun.resorts.holidays.data.repository.jpa.PlanillasJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of PlanillasService
 */
@Component
@Transactional
public class PlanillasServiceImpl implements PlanillasService {

	@Resource
	private PlanillasJpaRepository planillasJpaRepository;

	@Resource
	private PlanillasServiceMapper planillasServiceMapper;
	
	
	public Planillas findById(Integer idplanillas) {
		PlanillasEntity planillasEntity = planillasJpaRepository.findOne(idplanillas);
		return planillasServiceMapper.mapPlanillasEntityToPlanillas(planillasEntity);
	}

	
	public List<Planillas> findAll() {
		Iterable<PlanillasEntity> entities = planillasJpaRepository.findAll();
		List<Planillas> beans = new ArrayList<Planillas>();
		for(PlanillasEntity planillasEntity : entities) {
			beans.add(planillasServiceMapper.mapPlanillasEntityToPlanillas(planillasEntity));
		}
		return beans;
	}

	
	public Planillas save(Planillas planillas) {
		return update(planillas) ;
	}

	
	public Planillas create(Planillas planillas) {
		PlanillasEntity planillasEntity = planillasJpaRepository.findOne(planillas.getIdplanillas());
		if( planillasEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		planillasEntity = new PlanillasEntity();
		planillasServiceMapper.mapPlanillasToPlanillasEntity(planillas, planillasEntity);
		PlanillasEntity planillasEntitySaved = planillasJpaRepository.save(planillasEntity);
		return planillasServiceMapper.mapPlanillasEntityToPlanillas(planillasEntitySaved);
	}

	
	public Planillas update(Planillas planillas) {
		PlanillasEntity planillasEntity = planillasJpaRepository.findOne(planillas.getIdplanillas());
		planillasServiceMapper.mapPlanillasToPlanillasEntity(planillas, planillasEntity);
		PlanillasEntity planillasEntitySaved = planillasJpaRepository.save(planillasEntity);
		return planillasServiceMapper.mapPlanillasEntityToPlanillas(planillasEntitySaved);
	}

	
	public void delete(Integer idplanillas) {
		planillasJpaRepository.delete(idplanillas);
	}

	public PlanillasJpaRepository getPlanillasJpaRepository() {
		return planillasJpaRepository;
	}

	public void setPlanillasJpaRepository(PlanillasJpaRepository planillasJpaRepository) {
		this.planillasJpaRepository = planillasJpaRepository;
	}

	public PlanillasServiceMapper getPlanillasServiceMapper() {
		return planillasServiceMapper;
	}

	public void setPlanillasServiceMapper(PlanillasServiceMapper planillasServiceMapper) {
		this.planillasServiceMapper = planillasServiceMapper;
	}

}
