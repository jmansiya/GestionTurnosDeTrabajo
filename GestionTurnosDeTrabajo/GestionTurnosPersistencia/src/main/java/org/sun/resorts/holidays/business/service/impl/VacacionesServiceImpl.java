/*
 * Created on 28 oct 2015 ( Time 22:07:20 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package org.sun.resorts.holidays.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.sun.resorts.holidays.model.Vacaciones;
import org.sun.resorts.holidays.model.jpa.VacacionesEntity;
import java.util.Date;
import org.sun.resorts.holidays.business.service.VacacionesService;
import org.sun.resorts.holidays.business.service.mapping.VacacionesServiceMapper;
import org.sun.resorts.holidays.data.repository.jpa.VacacionesJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of VacacionesService
 */
@Component
@Transactional
public class VacacionesServiceImpl implements VacacionesService {

	@Resource
	private VacacionesJpaRepository vacacionesJpaRepository;

	@Resource
	private VacacionesServiceMapper vacacionesServiceMapper;
	
	@Override
	public Vacaciones findById(Integer idvacaciones) {
		VacacionesEntity vacacionesEntity = vacacionesJpaRepository.findOne(idvacaciones);
		return vacacionesServiceMapper.mapVacacionesEntityToVacaciones(vacacionesEntity);
	}

	@Override
	public List<Vacaciones> findAll() {
		Iterable<VacacionesEntity> entities = vacacionesJpaRepository.findAll();
		List<Vacaciones> beans = new ArrayList<Vacaciones>();
		for(VacacionesEntity vacacionesEntity : entities) {
			beans.add(vacacionesServiceMapper.mapVacacionesEntityToVacaciones(vacacionesEntity));
		}
		return beans;
	}

	@Override
	public Vacaciones save(Vacaciones vacaciones) {
		return update(vacaciones) ;
	}

	@Override
	public Vacaciones create(Vacaciones vacaciones) {
		VacacionesEntity vacacionesEntity = vacacionesJpaRepository.findOne(vacaciones.getIdvacaciones());
		if( vacacionesEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		vacacionesEntity = new VacacionesEntity();
		vacacionesServiceMapper.mapVacacionesToVacacionesEntity(vacaciones, vacacionesEntity);
		VacacionesEntity vacacionesEntitySaved = vacacionesJpaRepository.save(vacacionesEntity);
		return vacacionesServiceMapper.mapVacacionesEntityToVacaciones(vacacionesEntitySaved);
	}

	@Override
	public Vacaciones update(Vacaciones vacaciones) {
		VacacionesEntity vacacionesEntity = vacacionesJpaRepository.findOne(vacaciones.getIdvacaciones());
		vacacionesServiceMapper.mapVacacionesToVacacionesEntity(vacaciones, vacacionesEntity);
		VacacionesEntity vacacionesEntitySaved = vacacionesJpaRepository.save(vacacionesEntity);
		return vacacionesServiceMapper.mapVacacionesEntityToVacaciones(vacacionesEntitySaved);
	}

	@Override
	public void delete(Integer idvacaciones) {
		vacacionesJpaRepository.delete(idvacaciones);
	}

	public VacacionesJpaRepository getVacacionesJpaRepository() {
		return vacacionesJpaRepository;
	}

	public void setVacacionesJpaRepository(VacacionesJpaRepository vacacionesJpaRepository) {
		this.vacacionesJpaRepository = vacacionesJpaRepository;
	}

	public VacacionesServiceMapper getVacacionesServiceMapper() {
		return vacacionesServiceMapper;
	}

	public void setVacacionesServiceMapper(VacacionesServiceMapper vacacionesServiceMapper) {
		this.vacacionesServiceMapper = vacacionesServiceMapper;
	}

}
