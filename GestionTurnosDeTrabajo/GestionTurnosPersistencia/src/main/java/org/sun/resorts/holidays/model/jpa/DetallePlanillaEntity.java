/*
 * Created on 31 oct 2015 ( Time 10:51:20 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.sun.resorts.holidays.model.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "detalle_planilla"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="detalle_planilla", catalog="sunholidayresortsbbdd" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="DetallePlanillaEntity.countAll", query="SELECT COUNT(x) FROM DetallePlanillaEntity x" )
} )
public class DetallePlanillaEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="ID_DETALLE", nullable=false)
    private Integer    idDetalle    ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Temporal(TemporalType.DATE)
    @Column(name="DIA", nullable=false)
    private Date       dia          ;

    @Column(name="TIPO_FECHA_idTIPO_FECHA", nullable=false)
    private Integer    tipoFechaIdtipoFecha ;

	// "planillasIdplanillas" (column "PLANILLAS_idPLANILLAS") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToMany(targetEntity=EmpleadosEntity.class)
    @JoinTable(name="detalle_planilla_has_empleados", 
      joinColumns=@JoinColumn(name="DETALLE_PLANILLA_ID_DETALLE", referencedColumnName="ID_DETALLE"),
      inverseJoinColumns=@JoinColumn(name="EMPLEADOS_idEMPLEADOS", referencedColumnName="idEMPLEADOS")
     ) 

    private List<EmpleadosEntity> listOfEmpleados;

    @ManyToOne
    @JoinColumn(name="PLANILLAS_idPLANILLAS", referencedColumnName="idPLANILLAS")
    private PlanillasEntity planillas   ;

    @ManyToMany(targetEntity=TurnosDeTrabajoEntity.class)
    @JoinTable(name="turnos_de_trabajo_has_detalle_planilla", 
      joinColumns=@JoinColumn(name="DETALLE_PLANILLA_ID_DETALLE", referencedColumnName="ID_DETALLE"),
      inverseJoinColumns=@JoinColumn(name="TURNOS_DE_TRABAJO_idTURNOS_DE_TRABAJO", referencedColumnName="idTURNOS_DE_TRABAJO")
     ) 

    private List<TurnosDeTrabajoEntity> listOfTurnosDeTrabajo;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public DetallePlanillaEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setIdDetalle( Integer idDetalle ) {
        this.idDetalle = idDetalle ;
    }
    public Integer getIdDetalle() {
        return this.idDetalle;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : DIA ( DATE ) 
    public void setDia( Date dia ) {
        this.dia = dia;
    }
    public Date getDia() {
        return this.dia;
    }

    //--- DATABASE MAPPING : TIPO_FECHA_idTIPO_FECHA ( INT ) 
    public void setTipoFechaIdtipoFecha( Integer tipoFechaIdtipoFecha ) {
        this.tipoFechaIdtipoFecha = tipoFechaIdtipoFecha;
    }
    public Integer getTipoFechaIdtipoFecha() {
        return this.tipoFechaIdtipoFecha;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfEmpleados( List<EmpleadosEntity> listOfEmpleados ) {
        this.listOfEmpleados = listOfEmpleados;
    }
    public List<EmpleadosEntity> getListOfEmpleados() {
        return this.listOfEmpleados;
    }

    public void setPlanillas( PlanillasEntity planillas ) {
        this.planillas = planillas;
    }
    public PlanillasEntity getPlanillas() {
        return this.planillas;
    }

    public void setListOfTurnosDeTrabajo( List<TurnosDeTrabajoEntity> listOfTurnosDeTrabajo ) {
        this.listOfTurnosDeTrabajo = listOfTurnosDeTrabajo;
    }
    public List<TurnosDeTrabajoEntity> getListOfTurnosDeTrabajo() {
        return this.listOfTurnosDeTrabajo;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(idDetalle);
        sb.append("]:"); 
        sb.append(dia);
        sb.append("|");
        sb.append(tipoFechaIdtipoFecha);
        return sb.toString(); 
    } 

}
