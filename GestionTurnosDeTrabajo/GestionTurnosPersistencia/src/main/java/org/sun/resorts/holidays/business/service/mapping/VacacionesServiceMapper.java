/*
 * Created on 28 oct 2015 ( Time 22:07:21 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package org.sun.resorts.holidays.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.sun.resorts.holidays.model.Vacaciones;
import org.sun.resorts.holidays.model.jpa.VacacionesEntity;
import org.sun.resorts.holidays.model.jpa.EstadosEntity;
import org.sun.resorts.holidays.model.jpa.EmpleadosEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class VacacionesServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public VacacionesServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'VacacionesEntity' to 'Vacaciones'
	 * @param vacacionesEntity
	 */
	public Vacaciones mapVacacionesEntityToVacaciones(VacacionesEntity vacacionesEntity) {
		if(vacacionesEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Vacaciones vacaciones = map(vacacionesEntity, Vacaciones.class);

		//--- Link mapping ( link to Estados )
		if(vacacionesEntity.getEstados() != null) {
			vacaciones.setEstado(vacacionesEntity.getEstados().getIdestados());
		}
		//--- Link mapping ( link to Empleados )
		if(vacacionesEntity.getEmpleados() != null) {
			vacaciones.setEmpleadosIdempleados(vacacionesEntity.getEmpleados().getIdempleados());
		}
		return vacaciones;
	}
	
	/**
	 * Mapping from 'Vacaciones' to 'VacacionesEntity'
	 * @param vacaciones
	 * @param vacacionesEntity
	 */
	public void mapVacacionesToVacacionesEntity(Vacaciones vacaciones, VacacionesEntity vacacionesEntity) {
		if(vacaciones == null) {
			return;
		}

		//--- Generic mapping 
		map(vacaciones, vacacionesEntity);

		//--- Link mapping ( link : vacaciones )
		if( hasLinkToEstados(vacaciones) ) {
			EstadosEntity estados1 = new EstadosEntity();
			estados1.setIdestados( vacaciones.getEstado() );
			vacacionesEntity.setEstados( estados1 );
		} else {
			vacacionesEntity.setEstados( null );
		}

		//--- Link mapping ( link : vacaciones )
		if( hasLinkToEmpleados(vacaciones) ) {
			EmpleadosEntity empleados2 = new EmpleadosEntity();
			empleados2.setIdempleados( vacaciones.getEmpleadosIdempleados() );
			vacacionesEntity.setEmpleados( empleados2 );
		} else {
			vacacionesEntity.setEmpleados( null );
		}

	}
	
	/**
	 * Verify that Estados id is valid.
	 * @param Estados Estados
	 * @return boolean
	 */
	private boolean hasLinkToEstados(Vacaciones vacaciones) {
		if(vacaciones.getEstado() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that Empleados id is valid.
	 * @param Empleados Empleados
	 * @return boolean
	 */
	private boolean hasLinkToEmpleados(Vacaciones vacaciones) {
		if(vacaciones.getEmpleadosIdempleados() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}