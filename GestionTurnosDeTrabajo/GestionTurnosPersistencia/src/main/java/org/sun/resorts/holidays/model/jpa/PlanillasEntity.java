/*
 * Created on 31 oct 2015 ( Time 10:51:20 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.sun.resorts.holidays.model.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "planillas"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="planillas", catalog="sunholidayresortsbbdd" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="PlanillasEntity.countAll", query="SELECT COUNT(x) FROM PlanillasEntity x" )
} )
public class PlanillasEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="idPLANILLAS", nullable=false)
    private Integer    idplanillas  ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Temporal(TemporalType.DATE)
    @Column(name="FECHA_INICIO", nullable=false)
    private Date       fechaInicio  ;

    @Column(name="ID_DETALLE", nullable=false)
    private Integer    idDetalle    ;

    @Temporal(TemporalType.DATE)
    @Column(name="FECHA_FIN", nullable=false)
    private Date       fechaFin     ;

    @Column(name="DESCRIPCION", length=65)
    private String     descripcion  ;

	// "idPuestoTrabajo" (column "ID_PUESTO_TRABAJO") is not defined by itself because used as FK in a link 
	// "idEstado" (column "ID_ESTADO") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="ID_PUESTO_TRABAJO", referencedColumnName="idPUESTO_DE_TRABAJO")
    private PuestoDeTrabajoEntity puestoDeTrabajo;

    @OneToMany(mappedBy="planillas", targetEntity=DetallePlanillaEntity.class)
    private List<DetallePlanillaEntity> listOfDetallePlanilla;

    @ManyToOne(optional = true)
    @JoinColumn(name="ID_ESTADO", referencedColumnName="idESTADOS")
    private EstadosEntity estados     ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public PlanillasEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setIdplanillas( Integer idplanillas ) {
        this.idplanillas = idplanillas ;
    }
    public Integer getIdplanillas() {
        return this.idplanillas;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : FECHA_INICIO ( DATE ) 
    public void setFechaInicio( Date fechaInicio ) {
        this.fechaInicio = fechaInicio;
    }
    public Date getFechaInicio() {
        return this.fechaInicio;
    }

    //--- DATABASE MAPPING : ID_DETALLE ( INT ) 
    public void setIdDetalle( Integer idDetalle ) {
        this.idDetalle = idDetalle;
    }
    public Integer getIdDetalle() {
        return this.idDetalle;
    }

    //--- DATABASE MAPPING : FECHA_FIN ( DATE ) 
    public void setFechaFin( Date fechaFin ) {
        this.fechaFin = fechaFin;
    }
    public Date getFechaFin() {
        return this.fechaFin;
    }

    //--- DATABASE MAPPING : DESCRIPCION ( VARCHAR ) 
    public void setDescripcion( String descripcion ) {
        this.descripcion = descripcion;
    }
    public String getDescripcion() {
        return this.descripcion;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setPuestoDeTrabajo( PuestoDeTrabajoEntity puestoDeTrabajo ) {
        this.puestoDeTrabajo = puestoDeTrabajo;
    }
    public PuestoDeTrabajoEntity getPuestoDeTrabajo() {
        return this.puestoDeTrabajo;
    }

    public void setListOfDetallePlanilla( List<DetallePlanillaEntity> listOfDetallePlanilla ) {
        this.listOfDetallePlanilla = listOfDetallePlanilla;
    }
    public List<DetallePlanillaEntity> getListOfDetallePlanilla() {
        return this.listOfDetallePlanilla;
    }

    public void setEstados( EstadosEntity estados ) {
        this.estados = estados;
    }
    public EstadosEntity getEstados() {
        return this.estados;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(idplanillas);
        sb.append("]:"); 
        sb.append(fechaInicio);
        sb.append("|");
        sb.append(idDetalle);
        sb.append("|");
        sb.append(fechaFin);
        sb.append("|");
        sb.append(descripcion);
        return sb.toString(); 
    } 

}
