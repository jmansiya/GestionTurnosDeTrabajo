/*
 * Created on 31 oct 2015 ( Time 10:51:35 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package org.sun.resorts.holidays.persistence.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.sun.resorts.holidays.model.TurnosDeTrabajoHasDetallePlanilla;
import org.sun.resorts.holidays.model.jpa.TurnosDeTrabajoHasDetallePlanillaEntity;
import org.sun.resorts.holidays.model.jpa.TurnosDeTrabajoHasDetallePlanillaEntityKey;
import org.sun.resorts.holidays.persistence.service.TurnosDeTrabajoHasDetallePlanillaService;
import org.sun.resorts.holidays.persistence.service.mapping.TurnosDeTrabajoHasDetallePlanillaServiceMapper;
import org.sun.resorts.holidays.data.repository.jpa.TurnosDeTrabajoHasDetallePlanillaJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of TurnosDeTrabajoHasDetallePlanillaService
 */
@Component
@Transactional
public class TurnosDeTrabajoHasDetallePlanillaServiceImpl implements TurnosDeTrabajoHasDetallePlanillaService {

	@Resource
	private TurnosDeTrabajoHasDetallePlanillaJpaRepository turnosDeTrabajoHasDetallePlanillaJpaRepository;

	@Resource
	private TurnosDeTrabajoHasDetallePlanillaServiceMapper turnosDeTrabajoHasDetallePlanillaServiceMapper;
	
	@Override
	public TurnosDeTrabajoHasDetallePlanilla findById(Integer turnosDeTrabajoIdturnosDeTrabajo, Integer detallePlanillaIdDetalle) {
		TurnosDeTrabajoHasDetallePlanillaEntityKey id = new TurnosDeTrabajoHasDetallePlanillaEntityKey(turnosDeTrabajoIdturnosDeTrabajo, detallePlanillaIdDetalle);
		TurnosDeTrabajoHasDetallePlanillaEntity turnosDeTrabajoHasDetallePlanillaEntity = turnosDeTrabajoHasDetallePlanillaJpaRepository.findOne(id);
		return turnosDeTrabajoHasDetallePlanillaServiceMapper.mapTurnosDeTrabajoHasDetallePlanillaEntityToTurnosDeTrabajoHasDetallePlanilla(turnosDeTrabajoHasDetallePlanillaEntity);
	}

	@Override
	public List<TurnosDeTrabajoHasDetallePlanilla> findAll() {
		Iterable<TurnosDeTrabajoHasDetallePlanillaEntity> entities = turnosDeTrabajoHasDetallePlanillaJpaRepository.findAll();
		List<TurnosDeTrabajoHasDetallePlanilla> beans = new ArrayList<TurnosDeTrabajoHasDetallePlanilla>();
		for(TurnosDeTrabajoHasDetallePlanillaEntity turnosDeTrabajoHasDetallePlanillaEntity : entities) {
			beans.add(turnosDeTrabajoHasDetallePlanillaServiceMapper.mapTurnosDeTrabajoHasDetallePlanillaEntityToTurnosDeTrabajoHasDetallePlanilla(turnosDeTrabajoHasDetallePlanillaEntity));
		}
		return beans;
	}

	@Override
	public TurnosDeTrabajoHasDetallePlanilla save(TurnosDeTrabajoHasDetallePlanilla turnosDeTrabajoHasDetallePlanilla) {
		return update(turnosDeTrabajoHasDetallePlanilla) ;
	}

	@Override
	public TurnosDeTrabajoHasDetallePlanilla create(TurnosDeTrabajoHasDetallePlanilla turnosDeTrabajoHasDetallePlanilla) {
		TurnosDeTrabajoHasDetallePlanillaEntityKey id = new TurnosDeTrabajoHasDetallePlanillaEntityKey(turnosDeTrabajoHasDetallePlanilla.getTurnosDeTrabajoIdturnosDeTrabajo(), turnosDeTrabajoHasDetallePlanilla.getDetallePlanillaIdDetalle());
		TurnosDeTrabajoHasDetallePlanillaEntity turnosDeTrabajoHasDetallePlanillaEntity = turnosDeTrabajoHasDetallePlanillaJpaRepository.findOne(id);
		if( turnosDeTrabajoHasDetallePlanillaEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		turnosDeTrabajoHasDetallePlanillaEntity = new TurnosDeTrabajoHasDetallePlanillaEntity();
		turnosDeTrabajoHasDetallePlanillaServiceMapper.mapTurnosDeTrabajoHasDetallePlanillaToTurnosDeTrabajoHasDetallePlanillaEntity(turnosDeTrabajoHasDetallePlanilla, turnosDeTrabajoHasDetallePlanillaEntity);
		TurnosDeTrabajoHasDetallePlanillaEntity turnosDeTrabajoHasDetallePlanillaEntitySaved = turnosDeTrabajoHasDetallePlanillaJpaRepository.save(turnosDeTrabajoHasDetallePlanillaEntity);
		return turnosDeTrabajoHasDetallePlanillaServiceMapper.mapTurnosDeTrabajoHasDetallePlanillaEntityToTurnosDeTrabajoHasDetallePlanilla(turnosDeTrabajoHasDetallePlanillaEntitySaved);
	}

	@Override
	public TurnosDeTrabajoHasDetallePlanilla update(TurnosDeTrabajoHasDetallePlanilla turnosDeTrabajoHasDetallePlanilla) {
		TurnosDeTrabajoHasDetallePlanillaEntityKey id = new TurnosDeTrabajoHasDetallePlanillaEntityKey(turnosDeTrabajoHasDetallePlanilla.getTurnosDeTrabajoIdturnosDeTrabajo(), turnosDeTrabajoHasDetallePlanilla.getDetallePlanillaIdDetalle());
		TurnosDeTrabajoHasDetallePlanillaEntity turnosDeTrabajoHasDetallePlanillaEntity = turnosDeTrabajoHasDetallePlanillaJpaRepository.findOne(id);
		turnosDeTrabajoHasDetallePlanillaServiceMapper.mapTurnosDeTrabajoHasDetallePlanillaToTurnosDeTrabajoHasDetallePlanillaEntity(turnosDeTrabajoHasDetallePlanilla, turnosDeTrabajoHasDetallePlanillaEntity);
		TurnosDeTrabajoHasDetallePlanillaEntity turnosDeTrabajoHasDetallePlanillaEntitySaved = turnosDeTrabajoHasDetallePlanillaJpaRepository.save(turnosDeTrabajoHasDetallePlanillaEntity);
		return turnosDeTrabajoHasDetallePlanillaServiceMapper.mapTurnosDeTrabajoHasDetallePlanillaEntityToTurnosDeTrabajoHasDetallePlanilla(turnosDeTrabajoHasDetallePlanillaEntitySaved);
	}

	@Override
	public void delete(Integer turnosDeTrabajoIdturnosDeTrabajo, Integer detallePlanillaIdDetalle) {
		TurnosDeTrabajoHasDetallePlanillaEntityKey id = new TurnosDeTrabajoHasDetallePlanillaEntityKey(turnosDeTrabajoIdturnosDeTrabajo, detallePlanillaIdDetalle);
		turnosDeTrabajoHasDetallePlanillaJpaRepository.delete(id);
	}

	public TurnosDeTrabajoHasDetallePlanillaJpaRepository getTurnosDeTrabajoHasDetallePlanillaJpaRepository() {
		return turnosDeTrabajoHasDetallePlanillaJpaRepository;
	}

	public void setTurnosDeTrabajoHasDetallePlanillaJpaRepository(TurnosDeTrabajoHasDetallePlanillaJpaRepository turnosDeTrabajoHasDetallePlanillaJpaRepository) {
		this.turnosDeTrabajoHasDetallePlanillaJpaRepository = turnosDeTrabajoHasDetallePlanillaJpaRepository;
	}

	public TurnosDeTrabajoHasDetallePlanillaServiceMapper getTurnosDeTrabajoHasDetallePlanillaServiceMapper() {
		return turnosDeTrabajoHasDetallePlanillaServiceMapper;
	}

	public void setTurnosDeTrabajoHasDetallePlanillaServiceMapper(TurnosDeTrabajoHasDetallePlanillaServiceMapper turnosDeTrabajoHasDetallePlanillaServiceMapper) {
		this.turnosDeTrabajoHasDetallePlanillaServiceMapper = turnosDeTrabajoHasDetallePlanillaServiceMapper;
	}

}
