/*
 * Created on 28 oct 2015 ( Time 21:40:09 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package org.sun.resorts.holidays.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.sun.resorts.holidays.model.DetallePlanilla;
import org.sun.resorts.holidays.model.jpa.DetallePlanillaEntity;
import java.util.Date;
import java.util.List;
import org.sun.resorts.holidays.business.service.DetallePlanillaService;
import org.sun.resorts.holidays.business.service.mapping.DetallePlanillaServiceMapper;
import org.sun.resorts.holidays.data.repository.jpa.DetallePlanillaJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of DetallePlanillaService
 */
@Component
@Transactional
public class DetallePlanillaServiceImpl implements DetallePlanillaService {

	@Resource
	private DetallePlanillaJpaRepository detallePlanillaJpaRepository;

	@Resource
	private DetallePlanillaServiceMapper detallePlanillaServiceMapper;
	
	public DetallePlanilla findById(Integer iddetallePlanilla) {
		DetallePlanillaEntity detallePlanillaEntity = detallePlanillaJpaRepository.findOne(iddetallePlanilla);
		return detallePlanillaServiceMapper.mapDetallePlanillaEntityToDetallePlanilla(detallePlanillaEntity);
	}

	public List<DetallePlanilla> findAll() {
		Iterable<DetallePlanillaEntity> entities = detallePlanillaJpaRepository.findAll();
		List<DetallePlanilla> beans = new ArrayList<DetallePlanilla>();
		for(DetallePlanillaEntity detallePlanillaEntity : entities) {
			beans.add(detallePlanillaServiceMapper.mapDetallePlanillaEntityToDetallePlanilla(detallePlanillaEntity));
		}
		return beans;
	}

	
	public DetallePlanilla save(DetallePlanilla detallePlanilla) {
		return update(detallePlanilla) ;
	}

	
	public DetallePlanilla create(DetallePlanilla detallePlanilla) {
		DetallePlanillaEntity detallePlanillaEntity = detallePlanillaJpaRepository.findOne(detallePlanilla.getIddetallePlanilla());
		if( detallePlanillaEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		detallePlanillaEntity = new DetallePlanillaEntity();
		detallePlanillaServiceMapper.mapDetallePlanillaToDetallePlanillaEntity(detallePlanilla, detallePlanillaEntity);
		DetallePlanillaEntity detallePlanillaEntitySaved = detallePlanillaJpaRepository.save(detallePlanillaEntity);
		return detallePlanillaServiceMapper.mapDetallePlanillaEntityToDetallePlanilla(detallePlanillaEntitySaved);
	}

	
	public DetallePlanilla update(DetallePlanilla detallePlanilla) {
		DetallePlanillaEntity detallePlanillaEntity = detallePlanillaJpaRepository.findOne(detallePlanilla.getIddetallePlanilla());
		detallePlanillaServiceMapper.mapDetallePlanillaToDetallePlanillaEntity(detallePlanilla, detallePlanillaEntity);
		DetallePlanillaEntity detallePlanillaEntitySaved = detallePlanillaJpaRepository.save(detallePlanillaEntity);
		return detallePlanillaServiceMapper.mapDetallePlanillaEntityToDetallePlanilla(detallePlanillaEntitySaved);
	}

	
	public void delete(Integer iddetallePlanilla) {
		detallePlanillaJpaRepository.delete(iddetallePlanilla);
	}

	public DetallePlanillaJpaRepository getDetallePlanillaJpaRepository() {
		return detallePlanillaJpaRepository;
	}

	public void setDetallePlanillaJpaRepository(DetallePlanillaJpaRepository detallePlanillaJpaRepository) {
		this.detallePlanillaJpaRepository = detallePlanillaJpaRepository;
	}

	public DetallePlanillaServiceMapper getDetallePlanillaServiceMapper() {
		return detallePlanillaServiceMapper;
	}

	public void setDetallePlanillaServiceMapper(DetallePlanillaServiceMapper detallePlanillaServiceMapper) {
		this.detallePlanillaServiceMapper = detallePlanillaServiceMapper;
	}

}
