/*
 * Created on 28 oct 2015 ( Time 21:33:28 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.sun.resorts.holidays.model.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "turnos_de_trabajo"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="turnos_de_trabajo", catalog="sunholidayresortsbbdd" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="TurnosDeTrabajoEntity.countAll", query="SELECT COUNT(x) FROM TurnosDeTrabajoEntity x" )
} )
public class TurnosDeTrabajoEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="idTURNOS_DE_TRABAJO", nullable=false)
    private Integer    idturnosDeTrabajo ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="NOMBRE", nullable=false, length=45)
    private String     nombre       ;

    @Column(name="DESCRIPCION", length=65)
    private String     descripcion  ;

	// "idPuestoTrabajo" (column "ID_PUESTO_TRABAJO") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="ID_PUESTO_TRABAJO", referencedColumnName="idPUESTO_DE_TRABAJO")
    private PuestoDeTrabajoEntity puestoDeTrabajo;

    @OneToMany(mappedBy="turnosDeTrabajo", targetEntity=EmpleadosEntity.class)
    private List<EmpleadosEntity> listOfEmpleados;

    @OneToMany(mappedBy="turnosDeTrabajo", targetEntity=HorarioEntity.class)
    private List<HorarioEntity> listOfHorario;

    @OneToMany(mappedBy="turnosDeTrabajo", targetEntity=TurnosTrabajoEspecialesEntity.class)
    private List<TurnosTrabajoEspecialesEntity> listOfTurnosTrabajoEspeciales;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public TurnosDeTrabajoEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setIdturnosDeTrabajo( Integer idturnosDeTrabajo ) {
        this.idturnosDeTrabajo = idturnosDeTrabajo ;
    }
    public Integer getIdturnosDeTrabajo() {
        return this.idturnosDeTrabajo;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : NOMBRE ( VARCHAR ) 
    public void setNombre( String nombre ) {
        this.nombre = nombre;
    }
    public String getNombre() {
        return this.nombre;
    }

    //--- DATABASE MAPPING : DESCRIPCION ( VARCHAR ) 
    public void setDescripcion( String descripcion ) {
        this.descripcion = descripcion;
    }
    public String getDescripcion() {
        return this.descripcion;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setPuestoDeTrabajo( PuestoDeTrabajoEntity puestoDeTrabajo ) {
        this.puestoDeTrabajo = puestoDeTrabajo;
    }
    public PuestoDeTrabajoEntity getPuestoDeTrabajo() {
        return this.puestoDeTrabajo;
    }

    public void setListOfEmpleados( List<EmpleadosEntity> listOfEmpleados ) {
        this.listOfEmpleados = listOfEmpleados;
    }
    public List<EmpleadosEntity> getListOfEmpleados() {
        return this.listOfEmpleados;
    }

    public void setListOfHorario( List<HorarioEntity> listOfHorario ) {
        this.listOfHorario = listOfHorario;
    }
    public List<HorarioEntity> getListOfHorario() {
        return this.listOfHorario;
    }

    public void setListOfTurnosTrabajoEspeciales( List<TurnosTrabajoEspecialesEntity> listOfTurnosTrabajoEspeciales ) {
        this.listOfTurnosTrabajoEspeciales = listOfTurnosTrabajoEspeciales;
    }
    public List<TurnosTrabajoEspecialesEntity> getListOfTurnosTrabajoEspeciales() {
        return this.listOfTurnosTrabajoEspeciales;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(idturnosDeTrabajo);
        sb.append("]:"); 
        sb.append(nombre);
        sb.append("|");
        sb.append(descripcion);
        return sb.toString(); 
    } 

}
