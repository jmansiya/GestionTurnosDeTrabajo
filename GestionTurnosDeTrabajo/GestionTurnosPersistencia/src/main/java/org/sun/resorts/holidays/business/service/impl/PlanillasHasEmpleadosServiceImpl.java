/*
 * Created on 28 oct 2015 ( Time 21:40:10 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package org.sun.resorts.holidays.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.sun.resorts.holidays.model.PlanillasHasEmpleados;
import org.sun.resorts.holidays.model.jpa.PlanillasHasEmpleadosEntity;
import org.sun.resorts.holidays.model.jpa.PlanillasHasEmpleadosEntityKey;
import org.sun.resorts.holidays.business.service.PlanillasHasEmpleadosService;
import org.sun.resorts.holidays.business.service.mapping.PlanillasHasEmpleadosServiceMapper;
import org.sun.resorts.holidays.data.repository.jpa.PlanillasHasEmpleadosJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of PlanillasHasEmpleadosService
 */
@Component
@Transactional
public class PlanillasHasEmpleadosServiceImpl implements PlanillasHasEmpleadosService {

	@Resource
	private PlanillasHasEmpleadosJpaRepository planillasHasEmpleadosJpaRepository;

	@Resource
	private PlanillasHasEmpleadosServiceMapper planillasHasEmpleadosServiceMapper;
	
	
	public PlanillasHasEmpleados findById(Integer planillasIdplanillas, Integer empleadosIdempleados) {
		PlanillasHasEmpleadosEntityKey id = new PlanillasHasEmpleadosEntityKey(planillasIdplanillas, empleadosIdempleados);
		PlanillasHasEmpleadosEntity planillasHasEmpleadosEntity = planillasHasEmpleadosJpaRepository.findOne(id);
		return planillasHasEmpleadosServiceMapper.mapPlanillasHasEmpleadosEntityToPlanillasHasEmpleados(planillasHasEmpleadosEntity);
	}

	
	public List<PlanillasHasEmpleados> findAll() {
		Iterable<PlanillasHasEmpleadosEntity> entities = planillasHasEmpleadosJpaRepository.findAll();
		List<PlanillasHasEmpleados> beans = new ArrayList<PlanillasHasEmpleados>();
		for(PlanillasHasEmpleadosEntity planillasHasEmpleadosEntity : entities) {
			beans.add(planillasHasEmpleadosServiceMapper.mapPlanillasHasEmpleadosEntityToPlanillasHasEmpleados(planillasHasEmpleadosEntity));
		}
		return beans;
	}

	
	public PlanillasHasEmpleados save(PlanillasHasEmpleados planillasHasEmpleados) {
		return update(planillasHasEmpleados) ;
	}

	
	public PlanillasHasEmpleados create(PlanillasHasEmpleados planillasHasEmpleados) {
		PlanillasHasEmpleadosEntityKey id = new PlanillasHasEmpleadosEntityKey(planillasHasEmpleados.getPlanillasIdplanillas(), planillasHasEmpleados.getEmpleadosIdempleados());
		PlanillasHasEmpleadosEntity planillasHasEmpleadosEntity = planillasHasEmpleadosJpaRepository.findOne(id);
		if( planillasHasEmpleadosEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		planillasHasEmpleadosEntity = new PlanillasHasEmpleadosEntity();
		planillasHasEmpleadosServiceMapper.mapPlanillasHasEmpleadosToPlanillasHasEmpleadosEntity(planillasHasEmpleados, planillasHasEmpleadosEntity);
		PlanillasHasEmpleadosEntity planillasHasEmpleadosEntitySaved = planillasHasEmpleadosJpaRepository.save(planillasHasEmpleadosEntity);
		return planillasHasEmpleadosServiceMapper.mapPlanillasHasEmpleadosEntityToPlanillasHasEmpleados(planillasHasEmpleadosEntitySaved);
	}

	
	public PlanillasHasEmpleados update(PlanillasHasEmpleados planillasHasEmpleados) {
		PlanillasHasEmpleadosEntityKey id = new PlanillasHasEmpleadosEntityKey(planillasHasEmpleados.getPlanillasIdplanillas(), planillasHasEmpleados.getEmpleadosIdempleados());
		PlanillasHasEmpleadosEntity planillasHasEmpleadosEntity = planillasHasEmpleadosJpaRepository.findOne(id);
		planillasHasEmpleadosServiceMapper.mapPlanillasHasEmpleadosToPlanillasHasEmpleadosEntity(planillasHasEmpleados, planillasHasEmpleadosEntity);
		PlanillasHasEmpleadosEntity planillasHasEmpleadosEntitySaved = planillasHasEmpleadosJpaRepository.save(planillasHasEmpleadosEntity);
		return planillasHasEmpleadosServiceMapper.mapPlanillasHasEmpleadosEntityToPlanillasHasEmpleados(planillasHasEmpleadosEntitySaved);
	}

	
	public void delete(Integer planillasIdplanillas, Integer empleadosIdempleados) {
		PlanillasHasEmpleadosEntityKey id = new PlanillasHasEmpleadosEntityKey(planillasIdplanillas, empleadosIdempleados);
		planillasHasEmpleadosJpaRepository.delete(id);
	}

	public PlanillasHasEmpleadosJpaRepository getPlanillasHasEmpleadosJpaRepository() {
		return planillasHasEmpleadosJpaRepository;
	}

	public void setPlanillasHasEmpleadosJpaRepository(PlanillasHasEmpleadosJpaRepository planillasHasEmpleadosJpaRepository) {
		this.planillasHasEmpleadosJpaRepository = planillasHasEmpleadosJpaRepository;
	}

	public PlanillasHasEmpleadosServiceMapper getPlanillasHasEmpleadosServiceMapper() {
		return planillasHasEmpleadosServiceMapper;
	}

	public void setPlanillasHasEmpleadosServiceMapper(PlanillasHasEmpleadosServiceMapper planillasHasEmpleadosServiceMapper) {
		this.planillasHasEmpleadosServiceMapper = planillasHasEmpleadosServiceMapper;
	}

}
