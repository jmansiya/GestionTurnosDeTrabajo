/*
 * Created on 28 oct 2015 ( Time 21:33:27 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.sun.resorts.holidays.model.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "direccion"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="direccion", catalog="sunholidayresortsbbdd" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="DireccionEntity.countAll", query="SELECT COUNT(x) FROM DireccionEntity x" )
} )
public class DireccionEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="idDIRECCION", nullable=false)
    private Integer    iddireccion  ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="DIRECCION", nullable=false, length=65)
    private String     direccion    ;

    @Column(name="CODIGO_POSTAL", nullable=false, length=5)
    private String     codigoPostal ;

    @Column(name="LOCALIDAD", length=55)
    private String     localidad    ;

    @Column(name="PROVINCIA", length=55)
    private String     provincia    ;

    @Column(name="PAIS", length=45)
    private String     pais         ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="direccion", targetEntity=EmpleadosEntity.class)
    private List<EmpleadosEntity> listOfEmpleados;

    @OneToMany(mappedBy="direccion", targetEntity=CentrosDeTrabajoEntity.class)
    private List<CentrosDeTrabajoEntity> listOfCentrosDeTrabajo;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public DireccionEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setIddireccion( Integer iddireccion ) {
        this.iddireccion = iddireccion ;
    }
    public Integer getIddireccion() {
        return this.iddireccion;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : DIRECCION ( VARCHAR ) 
    public void setDireccion( String direccion ) {
        this.direccion = direccion;
    }
    public String getDireccion() {
        return this.direccion;
    }

    //--- DATABASE MAPPING : CODIGO_POSTAL ( VARCHAR ) 
    public void setCodigoPostal( String codigoPostal ) {
        this.codigoPostal = codigoPostal;
    }
    public String getCodigoPostal() {
        return this.codigoPostal;
    }

    //--- DATABASE MAPPING : LOCALIDAD ( VARCHAR ) 
    public void setLocalidad( String localidad ) {
        this.localidad = localidad;
    }
    public String getLocalidad() {
        return this.localidad;
    }

    //--- DATABASE MAPPING : PROVINCIA ( VARCHAR ) 
    public void setProvincia( String provincia ) {
        this.provincia = provincia;
    }
    public String getProvincia() {
        return this.provincia;
    }

    //--- DATABASE MAPPING : PAIS ( VARCHAR ) 
    public void setPais( String pais ) {
        this.pais = pais;
    }
    public String getPais() {
        return this.pais;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfEmpleados( List<EmpleadosEntity> listOfEmpleados ) {
        this.listOfEmpleados = listOfEmpleados;
    }
    public List<EmpleadosEntity> getListOfEmpleados() {
        return this.listOfEmpleados;
    }

    public void setListOfCentrosDeTrabajo( List<CentrosDeTrabajoEntity> listOfCentrosDeTrabajo ) {
        this.listOfCentrosDeTrabajo = listOfCentrosDeTrabajo;
    }
    public List<CentrosDeTrabajoEntity> getListOfCentrosDeTrabajo() {
        return this.listOfCentrosDeTrabajo;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(iddireccion);
        sb.append("]:"); 
        sb.append(direccion);
        sb.append("|");
        sb.append(codigoPostal);
        sb.append("|");
        sb.append(localidad);
        sb.append("|");
        sb.append(provincia);
        sb.append("|");
        sb.append(pais);
        return sb.toString(); 
    } 

}
