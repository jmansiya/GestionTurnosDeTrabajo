/*
 * Created on 31 oct 2015 ( Time 10:51:21 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.sun.resorts.holidays.model.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "volumen_trabajo_especial"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="volumen_trabajo_especial", catalog="sunholidayresortsbbdd" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="VolumenTrabajoEspecialEntity.countAll", query="SELECT COUNT(x) FROM VolumenTrabajoEspecialEntity x" )
} )
public class VolumenTrabajoEspecialEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="idVOLUMEN", nullable=false)
    private Integer    idvolumen    ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Temporal(TemporalType.DATE)
    @Column(name="FECHA_INICIO", nullable=false)
    private Date       fechaInicio  ;

    @Temporal(TemporalType.DATE)
    @Column(name="FECHA_FIN", nullable=false)
    private Date       fechaFin     ;

    @Column(name="OBSERVACIONES", length=50)
    private String     observaciones ;

	// "idPuestoTrabajo" (column "ID_PUESTO_TRABAJO") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="ID_PUESTO_TRABAJO", referencedColumnName="idPUESTO_DE_TRABAJO")
    private PuestoDeTrabajoEntity puestoDeTrabajo;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public VolumenTrabajoEspecialEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setIdvolumen( Integer idvolumen ) {
        this.idvolumen = idvolumen ;
    }
    public Integer getIdvolumen() {
        return this.idvolumen;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : FECHA_INICIO ( DATE ) 
    public void setFechaInicio( Date fechaInicio ) {
        this.fechaInicio = fechaInicio;
    }
    public Date getFechaInicio() {
        return this.fechaInicio;
    }

    //--- DATABASE MAPPING : FECHA_FIN ( DATE ) 
    public void setFechaFin( Date fechaFin ) {
        this.fechaFin = fechaFin;
    }
    public Date getFechaFin() {
        return this.fechaFin;
    }

    //--- DATABASE MAPPING : OBSERVACIONES ( VARCHAR ) 
    public void setObservaciones( String observaciones ) {
        this.observaciones = observaciones;
    }
    public String getObservaciones() {
        return this.observaciones;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setPuestoDeTrabajo( PuestoDeTrabajoEntity puestoDeTrabajo ) {
        this.puestoDeTrabajo = puestoDeTrabajo;
    }
    public PuestoDeTrabajoEntity getPuestoDeTrabajo() {
        return this.puestoDeTrabajo;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(idvolumen);
        sb.append("]:"); 
        sb.append(fechaInicio);
        sb.append("|");
        sb.append(fechaFin);
        sb.append("|");
        sb.append(observaciones);
        return sb.toString(); 
    } 

}
