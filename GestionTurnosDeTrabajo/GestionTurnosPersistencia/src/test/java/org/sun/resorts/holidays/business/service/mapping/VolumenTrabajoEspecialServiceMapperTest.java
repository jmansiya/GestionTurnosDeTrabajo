/*
 * Created on 28 oct 2015 ( Time 21:40:11 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package org.sun.resorts.holidays.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.sun.resorts.holidays.model.VolumenTrabajoEspecial;
import org.sun.resorts.holidays.model.jpa.VolumenTrabajoEspecialEntity;
import org.sun.resorts.holidays.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class VolumenTrabajoEspecialServiceMapperTest {

	private VolumenTrabajoEspecialServiceMapper volumenTrabajoEspecialServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		volumenTrabajoEspecialServiceMapper = new VolumenTrabajoEspecialServiceMapper();
		volumenTrabajoEspecialServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'VolumenTrabajoEspecialEntity' to 'VolumenTrabajoEspecial'
	 * @param volumenTrabajoEspecialEntity
	 */
	@Test
	public void testMapVolumenTrabajoEspecialEntityToVolumenTrabajoEspecial() {
		// Given
		VolumenTrabajoEspecialEntity volumenTrabajoEspecialEntity = new VolumenTrabajoEspecialEntity();
		volumenTrabajoEspecialEntity.setFechaInicio(mockValues.nextDate());
		volumenTrabajoEspecialEntity.setFechaFin(mockValues.nextDate());
		volumenTrabajoEspecialEntity.setObservaciones(mockValues.nextString(50));
		
		// When
		VolumenTrabajoEspecial volumenTrabajoEspecial = volumenTrabajoEspecialServiceMapper.mapVolumenTrabajoEspecialEntityToVolumenTrabajoEspecial(volumenTrabajoEspecialEntity);
		
		// Then
		assertEquals(volumenTrabajoEspecialEntity.getFechaInicio(), volumenTrabajoEspecial.getFechaInicio());
		assertEquals(volumenTrabajoEspecialEntity.getFechaFin(), volumenTrabajoEspecial.getFechaFin());
		assertEquals(volumenTrabajoEspecialEntity.getObservaciones(), volumenTrabajoEspecial.getObservaciones());
	}
	
	/**
	 * Test : Mapping from 'VolumenTrabajoEspecial' to 'VolumenTrabajoEspecialEntity'
	 */
	@Test
	public void testMapVolumenTrabajoEspecialToVolumenTrabajoEspecialEntity() {
		// Given
		VolumenTrabajoEspecial volumenTrabajoEspecial = new VolumenTrabajoEspecial();
		volumenTrabajoEspecial.setFechaInicio(mockValues.nextDate());
		volumenTrabajoEspecial.setFechaFin(mockValues.nextDate());
		volumenTrabajoEspecial.setObservaciones(mockValues.nextString(50));

		VolumenTrabajoEspecialEntity volumenTrabajoEspecialEntity = new VolumenTrabajoEspecialEntity();
		
		// When
		volumenTrabajoEspecialServiceMapper.mapVolumenTrabajoEspecialToVolumenTrabajoEspecialEntity(volumenTrabajoEspecial, volumenTrabajoEspecialEntity);
		
		// Then
		assertEquals(volumenTrabajoEspecial.getFechaInicio(), volumenTrabajoEspecialEntity.getFechaInicio());
		assertEquals(volumenTrabajoEspecial.getFechaFin(), volumenTrabajoEspecialEntity.getFechaFin());
		assertEquals(volumenTrabajoEspecial.getObservaciones(), volumenTrabajoEspecialEntity.getObservaciones());
	}

}