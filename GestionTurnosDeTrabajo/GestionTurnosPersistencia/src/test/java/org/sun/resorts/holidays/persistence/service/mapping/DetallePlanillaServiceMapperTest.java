/*
 * Created on 31 oct 2015 ( Time 10:51:33 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package org.sun.resorts.holidays.persistence.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.sun.resorts.holidays.model.DetallePlanilla;
import org.sun.resorts.holidays.model.jpa.DetallePlanillaEntity;
import org.sun.resorts.holidays.model.jpa.PlanillasEntity;
import org.sun.resorts.holidays.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class DetallePlanillaServiceMapperTest {

	private DetallePlanillaServiceMapper detallePlanillaServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		detallePlanillaServiceMapper = new DetallePlanillaServiceMapper();
		detallePlanillaServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'DetallePlanillaEntity' to 'DetallePlanilla'
	 * @param detallePlanillaEntity
	 */
	@Test
	public void testMapDetallePlanillaEntityToDetallePlanilla() {
		// Given
		DetallePlanillaEntity detallePlanillaEntity = new DetallePlanillaEntity();
		detallePlanillaEntity.setDia(mockValues.nextDate());
		detallePlanillaEntity.setTipoFechaIdtipoFecha(mockValues.nextInteger());
		detallePlanillaEntity.setPlanillas(new PlanillasEntity());
		detallePlanillaEntity.getPlanillas().setIdplanillas(mockValues.nextInteger());
		
		// When
		DetallePlanilla detallePlanilla = detallePlanillaServiceMapper.mapDetallePlanillaEntityToDetallePlanilla(detallePlanillaEntity);
		
		// Then
		assertEquals(detallePlanillaEntity.getDia(), detallePlanilla.getDia());
		assertEquals(detallePlanillaEntity.getTipoFechaIdtipoFecha(), detallePlanilla.getTipoFechaIdtipoFecha());
		assertEquals(detallePlanillaEntity.getPlanillas().getIdplanillas(), detallePlanilla.getPlanillasIdplanillas());
	}
	
	/**
	 * Test : Mapping from 'DetallePlanilla' to 'DetallePlanillaEntity'
	 */
	@Test
	public void testMapDetallePlanillaToDetallePlanillaEntity() {
		// Given
		DetallePlanilla detallePlanilla = new DetallePlanilla();
		detallePlanilla.setDia(mockValues.nextDate());
		detallePlanilla.setTipoFechaIdtipoFecha(mockValues.nextInteger());
		detallePlanilla.setPlanillasIdplanillas(mockValues.nextInteger());

		DetallePlanillaEntity detallePlanillaEntity = new DetallePlanillaEntity();
		
		// When
		detallePlanillaServiceMapper.mapDetallePlanillaToDetallePlanillaEntity(detallePlanilla, detallePlanillaEntity);
		
		// Then
		assertEquals(detallePlanilla.getDia(), detallePlanillaEntity.getDia());
		assertEquals(detallePlanilla.getTipoFechaIdtipoFecha(), detallePlanillaEntity.getTipoFechaIdtipoFecha());
		assertEquals(detallePlanilla.getPlanillasIdplanillas(), detallePlanillaEntity.getPlanillas().getIdplanillas());
	}

}