/*
 * Created on 31 oct 2015 ( Time 10:51:35 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package org.sun.resorts.holidays.persistence.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.sun.resorts.holidays.model.Usuarios;
import org.sun.resorts.holidays.model.jpa.UsuariosEntity;
import org.sun.resorts.holidays.model.jpa.EmpleadosEntity;
import org.sun.resorts.holidays.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class UsuariosServiceMapperTest {

	private UsuariosServiceMapper usuariosServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		usuariosServiceMapper = new UsuariosServiceMapper();
		usuariosServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'UsuariosEntity' to 'Usuarios'
	 * @param usuariosEntity
	 */
	@Test
	public void testMapUsuariosEntityToUsuarios() {
		// Given
		UsuariosEntity usuariosEntity = new UsuariosEntity();
		usuariosEntity.setNombre(mockValues.nextString(45));
		usuariosEntity.setPassword(mockValues.nextString(45));
		usuariosEntity.setEmpleados(new EmpleadosEntity());
		usuariosEntity.getEmpleados().setIdempleados(mockValues.nextInteger());
		
		// When
		Usuarios usuarios = usuariosServiceMapper.mapUsuariosEntityToUsuarios(usuariosEntity);
		
		// Then
		assertEquals(usuariosEntity.getNombre(), usuarios.getNombre());
		assertEquals(usuariosEntity.getPassword(), usuarios.getPassword());
		assertEquals(usuariosEntity.getEmpleados().getIdempleados(), usuarios.getEmpleadosIdempleados());
	}
	
	/**
	 * Test : Mapping from 'Usuarios' to 'UsuariosEntity'
	 */
	@Test
	public void testMapUsuariosToUsuariosEntity() {
		// Given
		Usuarios usuarios = new Usuarios();
		usuarios.setNombre(mockValues.nextString(45));
		usuarios.setPassword(mockValues.nextString(45));
		usuarios.setEmpleadosIdempleados(mockValues.nextInteger());

		UsuariosEntity usuariosEntity = new UsuariosEntity();
		
		// When
		usuariosServiceMapper.mapUsuariosToUsuariosEntity(usuarios, usuariosEntity);
		
		// Then
		assertEquals(usuarios.getNombre(), usuariosEntity.getNombre());
		assertEquals(usuarios.getPassword(), usuariosEntity.getPassword());
		assertEquals(usuarios.getEmpleadosIdempleados(), usuariosEntity.getEmpleados().getIdempleados());
	}

}