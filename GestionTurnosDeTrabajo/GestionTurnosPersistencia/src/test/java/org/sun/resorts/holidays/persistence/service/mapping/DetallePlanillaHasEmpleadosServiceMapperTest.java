/*
 * Created on 31 oct 2015 ( Time 10:51:33 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package org.sun.resorts.holidays.persistence.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.sun.resorts.holidays.model.DetallePlanillaHasEmpleados;
import org.sun.resorts.holidays.model.jpa.DetallePlanillaHasEmpleadosEntity;
import org.sun.resorts.holidays.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class DetallePlanillaHasEmpleadosServiceMapperTest {

	private DetallePlanillaHasEmpleadosServiceMapper detallePlanillaHasEmpleadosServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		detallePlanillaHasEmpleadosServiceMapper = new DetallePlanillaHasEmpleadosServiceMapper();
		detallePlanillaHasEmpleadosServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'DetallePlanillaHasEmpleadosEntity' to 'DetallePlanillaHasEmpleados'
	 * @param detallePlanillaHasEmpleadosEntity
	 */
	@Test
	public void testMapDetallePlanillaHasEmpleadosEntityToDetallePlanillaHasEmpleados() {
		// Given
		DetallePlanillaHasEmpleadosEntity detallePlanillaHasEmpleadosEntity = new DetallePlanillaHasEmpleadosEntity();
		
		// When
		DetallePlanillaHasEmpleados detallePlanillaHasEmpleados = detallePlanillaHasEmpleadosServiceMapper.mapDetallePlanillaHasEmpleadosEntityToDetallePlanillaHasEmpleados(detallePlanillaHasEmpleadosEntity);
		
		// Then
	}
	
	/**
	 * Test : Mapping from 'DetallePlanillaHasEmpleados' to 'DetallePlanillaHasEmpleadosEntity'
	 */
	@Test
	public void testMapDetallePlanillaHasEmpleadosToDetallePlanillaHasEmpleadosEntity() {
		// Given
		DetallePlanillaHasEmpleados detallePlanillaHasEmpleados = new DetallePlanillaHasEmpleados();

		DetallePlanillaHasEmpleadosEntity detallePlanillaHasEmpleadosEntity = new DetallePlanillaHasEmpleadosEntity();
		
		// When
		detallePlanillaHasEmpleadosServiceMapper.mapDetallePlanillaHasEmpleadosToDetallePlanillaHasEmpleadosEntity(detallePlanillaHasEmpleados, detallePlanillaHasEmpleadosEntity);
		
		// Then
	}

}