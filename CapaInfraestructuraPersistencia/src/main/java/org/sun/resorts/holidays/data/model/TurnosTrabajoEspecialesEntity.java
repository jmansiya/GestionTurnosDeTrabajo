/*
 * Created on 17 oct 2015 ( Time 10:46:16 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a composite Primary Key  


package org.sun.resorts.holidays.data.model;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "turnos_trabajo_especiales"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="turnos_trabajo_especiales" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="TurnosTrabajoEspecialesEntity.countAll", query="SELECT COUNT(x) FROM TurnosTrabajoEspecialesEntity x" )
} )
public class TurnosTrabajoEspecialesEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( EMBEDDED IN AN EXTERNAL CLASS )  
    //----------------------------------------------------------------------
	@EmbeddedId
    private TurnosTrabajoEspecialesEntityKey compositePrimaryKey ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Temporal(TemporalType.DATE)
    @Column(name="FECHA_INICIO", nullable=false)
    private Date       fechaInicio  ;

    @Temporal(TemporalType.DATE)
    @Column(name="FECHA_FIN", nullable=false)
    private Date       fechaFin     ;

    @Column(name="OBSERVACIONES", length=45)
    private String     observaciones ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="EMPLEADOS_idEMPLEADOS", referencedColumnName="idEMPLEADOS", insertable=false, updatable=false)
    private EmpleadosEntity empleados   ;

    @ManyToOne
    @JoinColumns({    
  	  @JoinColumn(name = "ID_TURNO_TRABAJO", referencedColumnName = "idTURNOS_DE_TRABAJO"),
  	  @JoinColumn(name = "ID_PUESTO_TRABAJO", referencedColumnName = "ID_PUESTO_TRABAJO")
  	})
    private TurnosDeTrabajoEntity turnosDeTrabajo;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public TurnosTrabajoEspecialesEntity() {
		super();
		this.compositePrimaryKey = new TurnosTrabajoEspecialesEntityKey();       
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE COMPOSITE KEY 
    //----------------------------------------------------------------------
    public void setEmpleadosIdempleados( Integer empleadosIdempleados ) {
        this.compositePrimaryKey.setEmpleadosIdempleados( empleadosIdempleados ) ;
    }
    public Integer getEmpleadosIdempleados() {
        return this.compositePrimaryKey.getEmpleadosIdempleados() ;
    }
    public void setTurnosDeTrabajoIdturnosDeTrabajo( Integer turnosDeTrabajoIdturnosDeTrabajo ) {
        this.compositePrimaryKey.setTurnosDeTrabajoIdturnosDeTrabajo( turnosDeTrabajoIdturnosDeTrabajo ) ;
    }
    public Integer getTurnosDeTrabajoIdturnosDeTrabajo() {
        return this.compositePrimaryKey.getTurnosDeTrabajoIdturnosDeTrabajo() ;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : FECHA_INICIO ( DATE ) 
    public void setFechaInicio( Date fechaInicio ) {
        this.fechaInicio = fechaInicio;
    }
    public Date getFechaInicio() {
        return this.fechaInicio;
    }

    //--- DATABASE MAPPING : FECHA_FIN ( DATE ) 
    public void setFechaFin( Date fechaFin ) {
        this.fechaFin = fechaFin;
    }
    public Date getFechaFin() {
        return this.fechaFin;
    }

    //--- DATABASE MAPPING : OBSERVACIONES ( VARCHAR ) 
    public void setObservaciones( String observaciones ) {
        this.observaciones = observaciones;
    }
    public String getObservaciones() {
        return this.observaciones;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setEmpleados( EmpleadosEntity empleados ) {
        this.empleados = empleados;
    }
    public EmpleadosEntity getEmpleados() {
        return this.empleados;
    }

    public void setTurnosDeTrabajo( TurnosDeTrabajoEntity turnosDeTrabajo ) {
        this.turnosDeTrabajo = turnosDeTrabajo;
    }
    public TurnosDeTrabajoEntity getTurnosDeTrabajo() {
        return this.turnosDeTrabajo;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        if ( compositePrimaryKey != null ) {  
            sb.append(compositePrimaryKey.toString());  
        }  
        else {  
            sb.append( "(null-key)" ); 
        }  
        sb.append("]:"); 
        sb.append(fechaInicio);
        sb.append("|");
        sb.append(fechaFin);
        sb.append("|");
        sb.append(observaciones);
        return sb.toString(); 
    } 

}
